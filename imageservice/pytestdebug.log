versions pytest-8.3.4, python-3.12.6.final.0
invocation_dir=/Users/smvvxxxe/projects/imageservice/imageservice
cwd=/Users/smvvxxxe/projects/imageservice/imageservice
args=('tests/', '--debug', '-s')

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x102b6acf0>
    pytest_plugin_registered [hook]
        plugin: <Session  exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        plugin_name: session
        manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x102b6acf0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x1038210a0>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x103661c70>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
    early skip of rewriting module: code [assertion]
    early skip of rewriting module: codeop [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x103559ca0>
          plugin_name: 4350909600
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x102b6acf0>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/mark/__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/assertion/__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'anyio.pytest_plugin' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/anyio/pytest_plugin.py'>
          plugin_name: anyio
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='no' _global_capturing=<MultiCapture out=None err=None in_=None _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x1038210a0>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x103661c70>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x102b6ad50>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x103660560>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x103559ca0>
          plugin_name: 4350909600
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x102b6acf0>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/mark/__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/assertion/__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'anyio.pytest_plugin' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/anyio/pytest_plugin.py'>
          plugin_name: anyio
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='no' _global_capturing=<MultiCapture out=None err=None in_=None _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x1038210a0>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x103661c70>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x102b6ad50>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x103660560>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x103821ac0>
          plugin_name: funcmanage
          manager: <_pytest.config.PytestPluginManager object at 0x103559ca0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x102b6acf0>
          start_path: /Users/smvvxxxe/projects/imageservice/imageservice
          startdir: /Users/smvvxxxe/projects/imageservice/imageservice
      early skip of rewriting module: email.parser [assertion]
      early skip of rewriting module: email.feedparser [assertion]
      finish pytest_report_header --> [['rootdir: /Users/smvvxxxe/projects/imageservice/imageservice', 'plugins: anyio-4.7.0'], ['using: pytest-8.3.4', 'registered third-party plugins:', '  anyio-4.7.0 at /Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/anyio/pytest_plugin.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['tests/'] [collection]
        pytest_collectstart [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument CollectionArgument(path=PosixPath('/Users/smvvxxxe/projects/imageservice/imageservice/tests'), parts=[], module_name=None) [collection]
            pytest_collect_directory [hook]
                path: /Users/smvvxxxe/projects/imageservice/imageservice
                parent: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> <Package imageservice> [hook]
            pytest_collectstart [hook]
                collector: <Package imageservice>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Package imageservice>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x102b6acf0>
                  collection_path: /Users/smvvxxxe/projects/imageservice/imageservice/__init__.py
                  path: /Users/smvvxxxe/projects/imageservice/imageservice/__init__.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package imageservice>
                  file_path: /Users/smvvxxxe/projects/imageservice/imageservice/__init__.py
                  path: /Users/smvvxxxe/projects/imageservice/imageservice/__init__.py
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x102b6acf0>
                  collection_path: /Users/smvvxxxe/projects/imageservice/imageservice/.pytest_cache
                  path: /Users/smvvxxxe/projects/imageservice/imageservice/.pytest_cache
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x102b6acf0>
                  collection_path: /Users/smvvxxxe/projects/imageservice/imageservice/.venv
                  path: /Users/smvvxxxe/projects/imageservice/imageservice/.venv
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x102b6acf0>
                  collection_path: /Users/smvvxxxe/projects/imageservice/imageservice/__pycache__
                  path: /Users/smvvxxxe/projects/imageservice/imageservice/__pycache__
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x102b6acf0>
                  collection_path: /Users/smvvxxxe/projects/imageservice/imageservice/config
                  path: /Users/smvvxxxe/projects/imageservice/imageservice/config
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /Users/smvvxxxe/projects/imageservice/imageservice/config
                  parent: <Package imageservice>
              finish pytest_collect_directory --> <Dir config> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x102b6acf0>
                  collection_path: /Users/smvvxxxe/projects/imageservice/imageservice/pytestdebug.log
                  path: /Users/smvvxxxe/projects/imageservice/imageservice/pytestdebug.log
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package imageservice>
                  file_path: /Users/smvvxxxe/projects/imageservice/imageservice/pytestdebug.log
                  path: /Users/smvvxxxe/projects/imageservice/imageservice/pytestdebug.log
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x102b6acf0>
                  collection_path: /Users/smvvxxxe/projects/imageservice/imageservice/src
                  path: /Users/smvvxxxe/projects/imageservice/imageservice/src
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /Users/smvvxxxe/projects/imageservice/imageservice/src
                  parent: <Package imageservice>
              finish pytest_collect_directory --> <Dir src> [hook]
              pytest_collect_directory [hook]
                  path: /Users/smvvxxxe/projects/imageservice/imageservice/tests
                  parent: <Package imageservice>
              finish pytest_collect_directory --> <Dir tests> [hook]
            finish pytest_make_collect_report --> <CollectReport '.' lenresult=3 outcome='passed'> [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Dir tests> [collection]
      pytest_collectstart [hook]
          collector: <Dir tests>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir tests>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x102b6acf0>
            collection_path: /Users/smvvxxxe/projects/imageservice/imageservice/tests/__pycache__
            path: /Users/smvvxxxe/projects/imageservice/imageservice/tests/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x102b6acf0>
            collection_path: /Users/smvvxxxe/projects/imageservice/imageservice/tests/random_image.jpg
            path: /Users/smvvxxxe/projects/imageservice/imageservice/tests/random_image.jpg
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /Users/smvvxxxe/projects/imageservice/imageservice/tests/random_image.jpg
            path: /Users/smvvxxxe/projects/imageservice/imageservice/tests/random_image.jpg
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x102b6acf0>
            collection_path: /Users/smvvxxxe/projects/imageservice/imageservice/tests/test_upload_image.py
            path: /Users/smvvxxxe/projects/imageservice/imageservice/tests/test_upload_image.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /Users/smvvxxxe/projects/imageservice/imageservice/tests/test_upload_image.py
            path: /Users/smvvxxxe/projects/imageservice/imageservice/tests/test_upload_image.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir tests>
              module_path: /Users/smvvxxxe/projects/imageservice/imageservice/tests/test_upload_image.py
              path: /Users/smvvxxxe/projects/imageservice/imageservice/tests/test_upload_image.py
          finish pytest_pycollect_makemodule --> <Module test_upload_image.py> [hook]
        finish pytest_collect_file --> [<Module test_upload_image.py>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests' lenresult=1 outcome='passed'> [hook]
    genitems <Module test_upload_image.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_upload_image.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_upload_image.py>
      find_module called for: test_upload_image [assertion]
      matched test file '/Users/smvvxxxe/projects/imageservice/imageservice/tests/test_upload_image.py' [assertion]
      _read_pyc(/Users/smvvxxxe/projects/imageservice/imageservice/tests/test_upload_image.py): out of date [assertion]
      rewriting PosixPath('/Users/smvvxxxe/projects/imageservice/imageservice/tests/test_upload_image.py') [assertion]
      early skip of rewriting module: requests [assertion]
      early skip of rewriting module: urllib3 [assertion]
      early skip of rewriting module: urllib3.exceptions [assertion]
      early skip of rewriting module: http [assertion]
      early skip of rewriting module: http.client [assertion]
      early skip of rewriting module: urllib3._base_connection [assertion]
      early skip of rewriting module: urllib3.util [assertion]
      early skip of rewriting module: urllib3.util.connection [assertion]
      early skip of rewriting module: urllib3.util.timeout [assertion]
      early skip of rewriting module: urllib3.util.request [assertion]
      early skip of rewriting module: urllib3.util.util [assertion]
      early skip of rewriting module: brotlicffi [assertion]
      early skip of rewriting module: brotli [assertion]
      early skip of rewriting module: zstandard [assertion]
      early skip of rewriting module: urllib3.util.response [assertion]
      early skip of rewriting module: urllib3.util.retry [assertion]
      early skip of rewriting module: urllib3.util.ssl_ [assertion]
      early skip of rewriting module: hashlib [assertion]
      early skip of rewriting module: _hashlib [assertion]
      early skip of rewriting module: _blake2 [assertion]
      early skip of rewriting module: hmac [assertion]
      early skip of rewriting module: urllib3.util.url [assertion]
      early skip of rewriting module: urllib3.util.ssltransport [assertion]
      early skip of rewriting module: urllib3.util.wait [assertion]
      early skip of rewriting module: urllib3._collections [assertion]
      early skip of rewriting module: urllib3._version [assertion]
      early skip of rewriting module: urllib3.connectionpool [assertion]
      early skip of rewriting module: queue [assertion]
      early skip of rewriting module: _queue [assertion]
      early skip of rewriting module: urllib3._request_methods [assertion]
      early skip of rewriting module: urllib3.filepost [assertion]
      early skip of rewriting module: urllib3.fields [assertion]
      early skip of rewriting module: mimetypes [assertion]
      early skip of rewriting module: _winapi [assertion]
      early skip of rewriting module: winreg [assertion]
      early skip of rewriting module: urllib3.response [assertion]
      early skip of rewriting module: brotlicffi [assertion]
      early skip of rewriting module: brotli [assertion]
      early skip of rewriting module: zstandard [assertion]
      early skip of rewriting module: urllib3.connection [assertion]
      early skip of rewriting module: urllib3.http2 [assertion]
      early skip of rewriting module: urllib3.http2.probe [assertion]
      early skip of rewriting module: urllib3.util.ssl_match_hostname [assertion]
      early skip of rewriting module: urllib3.util.proxy [assertion]
      early skip of rewriting module: urllib3.poolmanager [assertion]
      early skip of rewriting module: requests.exceptions [assertion]
      early skip of rewriting module: requests.compat [assertion]
      early skip of rewriting module: chardet [assertion]
      early skip of rewriting module: charset_normalizer [assertion]
      early skip of rewriting module: charset_normalizer.api [assertion]
      early skip of rewriting module: charset_normalizer.cd [assertion]
      early skip of rewriting module: charset_normalizer.constant [assertion]
      early skip of rewriting module: charset_normalizer.md [assertion]
      early skip of rewriting module: charset_normalizer.md__mypyc [assertion]
      early skip of rewriting module: charset_normalizer.utils [assertion]
      early skip of rewriting module: _multibytecodec [assertion]
      early skip of rewriting module: charset_normalizer.models [assertion]
      early skip of rewriting module: charset_normalizer.legacy [assertion]
      early skip of rewriting module: charset_normalizer.version [assertion]
      early skip of rewriting module: simplejson [assertion]
      early skip of rewriting module: http.cookiejar [assertion]
      early skip of rewriting module: urllib.request [assertion]
      early skip of rewriting module: urllib.error [assertion]
      early skip of rewriting module: urllib.response [assertion]
      early skip of rewriting module: _scproxy [assertion]
      early skip of rewriting module: http.cookies [assertion]
      early skip of rewriting module: chardet [assertion]
      early skip of rewriting module: requests.packages [assertion]
      early skip of rewriting module: idna [assertion]
      early skip of rewriting module: idna.core [assertion]
      early skip of rewriting module: idna.idnadata [assertion]
      early skip of rewriting module: idna.intranges [assertion]
      early skip of rewriting module: idna.package_data [assertion]
      early skip of rewriting module: requests.utils [assertion]
      early skip of rewriting module: requests.certs [assertion]
      early skip of rewriting module: certifi [assertion]
      early skip of rewriting module: certifi.core [assertion]
      early skip of rewriting module: requests.__version__ [assertion]
      early skip of rewriting module: requests._internal_utils [assertion]
      early skip of rewriting module: requests.cookies [assertion]
      early skip of rewriting module: requests.structures [assertion]
      early skip of rewriting module: importlib.readers [assertion]
      early skip of rewriting module: importlib.resources.readers [assertion]
      early skip of rewriting module: importlib.resources._itertools [assertion]
      early skip of rewriting module: requests.api [assertion]
      early skip of rewriting module: requests.sessions [assertion]
      early skip of rewriting module: requests.adapters [assertion]
      early skip of rewriting module: requests.auth [assertion]
      early skip of rewriting module: requests.models [assertion]
      early skip of rewriting module: encodings.idna [assertion]
      early skip of rewriting module: stringprep [assertion]
      early skip of rewriting module: requests.hooks [assertion]
      early skip of rewriting module: requests.status_codes [assertion]
      early skip of rewriting module: urllib3.contrib [assertion]
      early skip of rewriting module: urllib3.contrib.socks [assertion]
      early skip of rewriting module: socks [assertion]
      early skip of rewriting module: boto3 [assertion]
      early skip of rewriting module: boto3.compat [assertion]
      early skip of rewriting module: boto3.exceptions [assertion]
      early skip of rewriting module: botocore [assertion]
      early skip of rewriting module: botocore.exceptions [assertion]
      early skip of rewriting module: botocore.vendored [assertion]
      early skip of rewriting module: botocore.vendored.requests [assertion]
      early skip of rewriting module: botocore.vendored.requests.exceptions [assertion]
      early skip of rewriting module: botocore.vendored.requests.packages [assertion]
      early skip of rewriting module: botocore.vendored.requests.packages.urllib3 [assertion]
      early skip of rewriting module: botocore.vendored.requests.packages.urllib3.exceptions [assertion]
      early skip of rewriting module: boto3.session [assertion]
      early skip of rewriting module: botocore.session [assertion]
      early skip of rewriting module: botocore.client [assertion]
      early skip of rewriting module: botocore.waiter [assertion]
      early skip of rewriting module: jmespath [assertion]
      early skip of rewriting module: jmespath.parser [assertion]
      early skip of rewriting module: jmespath.lexer [assertion]
      early skip of rewriting module: jmespath.exceptions [assertion]
      early skip of rewriting module: jmespath.compat [assertion]
      early skip of rewriting module: jmespath.ast [assertion]
      early skip of rewriting module: jmespath.visitor [assertion]
      early skip of rewriting module: jmespath.functions [assertion]
      early skip of rewriting module: botocore.docs [assertion]
      early skip of rewriting module: botocore.docs.service [assertion]
      early skip of rewriting module: botocore.docs.bcdoc [assertion]
      early skip of rewriting module: botocore.docs.bcdoc.restdoc [assertion]
      early skip of rewriting module: botocore.compat [assertion]
      early skip of rewriting module: botocore.vendored.six [assertion]
      early skip of rewriting module: dateutil [assertion]
      early skip of rewriting module: dateutil._version [assertion]
      early skip of rewriting module: dateutil.tz [assertion]
      early skip of rewriting module: dateutil.tz.tz [assertion]
      early skip of rewriting module: six [assertion]
      early skip of rewriting module: six.moves [assertion]
      early skip of rewriting module: dateutil.tz._common [assertion]
      early skip of rewriting module: dateutil.tz._factories [assertion]
      early skip of rewriting module: dateutil.tz.win [assertion]
      early skip of rewriting module: six.moves.winreg [assertion]
      early skip of rewriting module: xml.etree.cElementTree [assertion]
      early skip of rewriting module: awscrt [assertion]
      early skip of rewriting module: gzip [assertion]
      early skip of rewriting module: botocore.docs.bcdoc.docstringparser [assertion]
      early skip of rewriting module: html [assertion]
      early skip of rewriting module: html.entities [assertion]
      early skip of rewriting module: html.parser [assertion]
      early skip of rewriting module: _markupbase [assertion]
      early skip of rewriting module: botocore.docs.bcdoc.style [assertion]
      early skip of rewriting module: botocore.docs.client [assertion]
      early skip of rewriting module: botocore.docs.example [assertion]
      early skip of rewriting module: botocore.docs.shape [assertion]
      early skip of rewriting module: botocore.utils [assertion]
      early skip of rewriting module: dateutil.parser [assertion]
      early skip of rewriting module: dateutil.parser._parser [assertion]
      early skip of rewriting module: dateutil.relativedelta [assertion]
      early skip of rewriting module: dateutil._common [assertion]
      early skip of rewriting module: dateutil.parser.isoparser [assertion]
      early skip of rewriting module: botocore.awsrequest [assertion]
      early skip of rewriting module: botocore.httpsession [assertion]
      early skip of rewriting module: urllib3.contrib.pyopenssl [assertion]
      early skip of rewriting module: OpenSSL [assertion]
      early skip of rewriting module: botocore.docs.utils [assertion]
      early skip of rewriting module: botocore.docs.method [assertion]
      early skip of rewriting module: botocore.docs.params [assertion]
      early skip of rewriting module: botocore.docs.sharedexample [assertion]
      early skip of rewriting module: botocore.docs.paginator [assertion]
      early skip of rewriting module: botocore.docs.waiter [assertion]
      early skip of rewriting module: botocore.docs.docstring [assertion]
      early skip of rewriting module: botocore.args [assertion]
      early skip of rewriting module: botocore.parsers [assertion]
      early skip of rewriting module: botocore.eventstream [assertion]
      early skip of rewriting module: botocore.serialize [assertion]
      early skip of rewriting module: botocore.validate [assertion]
      early skip of rewriting module: botocore.config [assertion]
      early skip of rewriting module: botocore.endpoint [assertion]
      early skip of rewriting module: botocore.history [assertion]
      early skip of rewriting module: botocore.hooks [assertion]
      early skip of rewriting module: botocore.httpchecksum [assertion]
      early skip of rewriting module: botocore.response [assertion]
      early skip of rewriting module: botocore.regions [assertion]
      early skip of rewriting module: botocore.auth [assertion]
      early skip of rewriting module: botocore.crt [assertion]
      early skip of rewriting module: botocore.endpoint_provider [assertion]
      early skip of rewriting module: botocore.signers [assertion]
      early skip of rewriting module: botocore.useragent [assertion]
      early skip of rewriting module: botocore.customizations [assertion]
      early skip of rewriting module: botocore.compress [assertion]
      early skip of rewriting module: botocore.credentials [assertion]
      early skip of rewriting module: getpass [assertion]
      early skip of rewriting module: termios [assertion]
      early skip of rewriting module: botocore.configloader [assertion]
      early skip of rewriting module: configparser [assertion]
      early skip of rewriting module: botocore.tokens [assertion]
      early skip of rewriting module: botocore.discovery [assertion]
      early skip of rewriting module: botocore.model [assertion]
      early skip of rewriting module: botocore.paginate [assertion]
      early skip of rewriting module: botocore.retries [assertion]
      early skip of rewriting module: botocore.retries.adaptive [assertion]
      early skip of rewriting module: botocore.retries.bucket [assertion]
      early skip of rewriting module: botocore.retries.standard [assertion]
      early skip of rewriting module: botocore.retries.quota [assertion]
      early skip of rewriting module: botocore.retries.special [assertion]
      early skip of rewriting module: botocore.retries.base [assertion]
      early skip of rewriting module: botocore.retries.throttling [assertion]
      early skip of rewriting module: botocore.handlers [assertion]
      early skip of rewriting module: botocore.retryhandler [assertion]
      early skip of rewriting module: botocore.translate [assertion]
      early skip of rewriting module: botocore.monitoring [assertion]
      early skip of rewriting module: botocore.configprovider [assertion]
      early skip of rewriting module: botocore.customizations [assertion]
      early skip of rewriting module: botocore.errorfactory [assertion]
      early skip of rewriting module: botocore.loaders [assertion]
      early skip of rewriting module: boto3.utils [assertion]
      early skip of rewriting module: boto3.resources [assertion]
      early skip of rewriting module: boto3.resources.factory [assertion]
      early skip of rewriting module: boto3.docs [assertion]
      early skip of rewriting module: boto3.docs.service [assertion]
      early skip of rewriting module: boto3.docs.client [assertion]
      early skip of rewriting module: boto3.docs.resource [assertion]
      early skip of rewriting module: boto3.docs.action [assertion]
      early skip of rewriting module: boto3.docs.base [assertion]
      early skip of rewriting module: boto3.docs.method [assertion]
      early skip of rewriting module: boto3.docs.utils [assertion]
      early skip of rewriting module: boto3.docs.attr [assertion]
      early skip of rewriting module: boto3.docs.collection [assertion]
      early skip of rewriting module: boto3.docs.subresource [assertion]
      early skip of rewriting module: boto3.docs.waiter [assertion]
      early skip of rewriting module: boto3.docs.docstring [assertion]
      early skip of rewriting module: boto3.resources.action [assertion]
      early skip of rewriting module: boto3.resources.model [assertion]
      early skip of rewriting module: boto3.resources.params [assertion]
      early skip of rewriting module: boto3.resources.response [assertion]
      early skip of rewriting module: boto3.resources.base [assertion]
      early skip of rewriting module: boto3.resources.collection [assertion]
      early skip of rewriting module: PIL [assertion]
      early skip of rewriting module: PIL._version [assertion]
      early skip of rewriting module: PIL.Image [assertion]
      early skip of rewriting module: PIL.ExifTags [assertion]
      early skip of rewriting module: PIL.ImageMode [assertion]
      early skip of rewriting module: PIL._deprecate [assertion]
      early skip of rewriting module: PIL.TiffTags [assertion]
      early skip of rewriting module: PIL._binary [assertion]
      early skip of rewriting module: PIL._util [assertion]
      early skip of rewriting module: PIL._typing [assertion]
      early skip of rewriting module: defusedxml [assertion]
      early skip of rewriting module: PIL._imaging [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_upload_image.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_upload_image.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_upload_image.py>
            name: base64
            obj: <module 'base64' from '/opt/homebrew/Cellar/python@3.12/3.12.6/Frameworks/Python.framework/Versions/3.12/lib/python3.12/base64.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_upload_image.py>
            name: BytesIO
            obj: <class '_io.BytesIO'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_upload_image.py>
            name: json
            obj: <module 'json' from '/opt/homebrew/Cellar/python@3.12/3.12.6/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_upload_image.py>
            name: requests
            obj: <module 'requests' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/requests/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_upload_image.py>
            name: boto3
            obj: <module 'boto3' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/boto3/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_upload_image.py>
            name: Response
            obj: <class 'requests.models.Response'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_upload_image.py>
            name: Image
            obj: <module 'PIL.Image' from '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/PIL/Image.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_upload_image.py>
            name: logging
            obj: <module 'logging' from '/opt/homebrew/Cellar/python@3.12/3.12.6/Frameworks/Python.framework/Versions/3.12/lib/python3.12/logging/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_upload_image.py>
            name: logger
            obj: <Logger test_logger (WARNING)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_upload_image.py>
            name: userId
            obj: 3241
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_upload_image.py>
            name: bucket_name
            obj: 
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_upload_image.py>
            name: message
            obj: ""
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_upload_image.py>
            name: test_upload_image
            obj: <function test_upload_image at 0x102b5bce0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x102283350>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_upload_image>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_upload_image.py>
            name: test_list_images
            obj: <function test_list_images at 0x103c17c40>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x103c85190>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_list_images>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_upload_image.py>
            name: test_view_image
            obj: <function test_view_image at 0x10457fec0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x102283350>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_view_image>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_upload_image.py>
            name: test_delete_image
            obj: <function test_delete_image at 0x104580ae0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x1037ea1b0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_delete_image>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_upload_image.py' lenresult=4 outcome='passed'> [hook]
    genitems <Function test_upload_image> [collection]
      pytest_itemcollected [hook]
          item: <Function test_upload_image>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_list_images> [collection]
      pytest_itemcollected [hook]
          item: <Function test_list_images>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_view_image> [collection]
      pytest_itemcollected [hook]
          item: <Function test_view_image>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_delete_image> [collection]
      pytest_itemcollected [hook]
          item: <Function test_delete_image>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_upload_image.py' lenresult=4 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x102b6acf0>
          items: [<Function test_upload_image>, <Function test_list_images>, <Function test_view_image>, <Function test_delete_image>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x102b6acf0>
            items: [<Function test_upload_image>, <Function test_list_images>, <Function test_view_image>, <Function test_delete_image>]
            start_path: /Users/smvvxxxe/projects/imageservice/imageservice
            startdir: /Users/smvvxxxe/projects/imageservice/imageservice
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=4>
      pytest_runtest_protocol [hook]
          item: <Function test_upload_image>
          nextitem: <Function test_list_images>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_upload_image.py::test_upload_image
            location: ('tests/test_upload_image.py', 23, 'test_upload_image')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_upload_image>
        early skip of rewriting module: imageservice [assertion]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_upload_image>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_upload_image.py::test_upload_image' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_upload_image.py::test_upload_image' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_upload_image.py::test_upload_image' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x102b6acf0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_upload_image>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_upload_image>
          early skip of rewriting module: netrc [assertion]
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_upload_image>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_upload_image.py::test_upload_image' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_upload_image.py::test_upload_image' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_upload_image.py::test_upload_image' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x102b6acf0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_upload_image>
            nextitem: <Function test_list_images>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_upload_image>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_upload_image.py::test_upload_image' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_upload_image.py::test_upload_image' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_upload_image.py::test_upload_image' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x102b6acf0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_upload_image.py::test_upload_image
            location: ('tests/test_upload_image.py', 23, 'test_upload_image')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_list_images>
          nextitem: <Function test_view_image>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_upload_image.py::test_list_images
            location: ('tests/test_upload_image.py', 33, 'test_list_images')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_list_images>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_list_images>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_upload_image.py::test_list_images' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_upload_image.py::test_list_images' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_upload_image.py::test_list_images' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x102b6acf0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_list_images>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_list_images>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_list_images>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_upload_image.py::test_list_images' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_upload_image.py::test_list_images' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_upload_image.py::test_list_images' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x102b6acf0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_list_images>
            nextitem: <Function test_view_image>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_list_images>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_upload_image.py::test_list_images' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_upload_image.py::test_list_images' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_upload_image.py::test_list_images' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x102b6acf0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_upload_image.py::test_list_images
            location: ('tests/test_upload_image.py', 33, 'test_list_images')
        finish pytest_runtest_logfinish --> [] [hook]
        pytest_warning_recorded [hook]
            warning_message: {message : PytestReturnNotNoneWarning('Expected None, but tests/test_upload_image.py::test_list_images returned b\'{"thumbnails":[{"timestamp":"1734794024.653708","thumbnail":""},{"timestamp":"1734794106.281025","thumbnail":""},{"timestamp":"1734794296.015796","thumbnail":""}]}\', which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?'), category : 'PytestReturnNotNoneWarning', filename : '/Users/smvvxxxe/projects/imageservice/imageservice/.venv/lib/python3.12/site-packages/_pytest/python.py', lineno : 163, line : None}
            nodeid: tests/test_upload_image.py::test_list_images
            when: runtest
            location: None
        finish pytest_warning_recorded --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_view_image>
          nextitem: <Function test_delete_image>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_upload_image.py::test_view_image
            location: ('tests/test_upload_image.py', 45, 'test_view_image')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_view_image>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_view_image>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_upload_image.py::test_view_image' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_upload_image.py::test_view_image' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_upload_image.py::test_view_image' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x102b6acf0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_view_image>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_view_image>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_view_image>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_upload_image.py::test_view_image' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_upload_image.py::test_view_image' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_upload_image.py::test_view_image' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x102b6acf0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_view_image>
            nextitem: <Function test_delete_image>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_view_image>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_upload_image.py::test_view_image' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_upload_image.py::test_view_image' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_upload_image.py::test_view_image' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x102b6acf0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_upload_image.py::test_view_image
            location: ('tests/test_upload_image.py', 45, 'test_view_image')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_delete_image>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: tests/test_upload_image.py::test_delete_image
            location: ('tests/test_upload_image.py', 60, 'test_delete_image')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_delete_image>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_delete_image>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_upload_image.py::test_delete_image' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_upload_image.py::test_delete_image' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_upload_image.py::test_delete_image' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x102b6acf0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_delete_image>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_delete_image>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_delete_image>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_upload_image.py::test_delete_image' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_upload_image.py::test_delete_image' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_upload_image.py::test_delete_image' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x102b6acf0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_delete_image>
            nextitem: None
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_delete_image>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_upload_image.py::test_delete_image' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_upload_image.py::test_delete_image' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_upload_image.py::test_delete_image' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x102b6acf0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_upload_image.py::test_delete_image
            location: ('tests/test_upload_image.py', 60, 'test_delete_image')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session  exitstatus=0 testsfailed=0 testscollected=4>
        exitstatus: 0
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x102b6ad50>
          exitstatus: 0
          config: <_pytest.config.Config object at 0x102b6acf0>
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x102b6acf0>
    finish pytest_unconfigure --> [] [hook]
